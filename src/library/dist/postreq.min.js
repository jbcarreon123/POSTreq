!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).POSTreq={})}(this,function(e){"use strict";e.POSTreq=class{_iframe;_url;constructor(e){this._url=e?.url||"https://postreq.jbc.lol/postreq",this._iframe=document.createElement("iframe"),e?.style?this._iframe.style=e?.style:this._iframe.style.display="none",this._iframe.src=this._url,(e?.parentElement??document.body).appendChild(this._iframe)}async onMessage(){return new Promise(e=>window.onmessage=t=>{if(t.origin!==this._url)return e(t)})}async fetch(e,t){if(e.includes("undefined"))return null;const s={url:e,req:t};this._iframe.contentWindow?.postMessage(s);return(await this.onMessage()).data}},e.POSTreq_Iframe=class{constructor(){console.log("POSTreq loaded. https://postreq.jbc.lol/"),window.addEventListener("message",async e=>{if(!e.data.url)return;const t=e;let s=document.querySelector("p.debug");s&&(s.textContent=JSON.stringify(t));try{const e=t.data,r=await fetch(e.url,e.req),a={};let o,n,i,c,l;r.headers.forEach((e,t)=>{a[t]=e});try{o=await r.clone().json()}catch{}try{n=await r.clone().arrayBuffer()}catch{}try{i=await r.clone().blob()}catch{}try{c=await r.clone().formData()}catch{}try{l=await r.clone().text()}catch{}const u={status:r.status,statusText:r.statusText,headers:a,json:o,arrayBuffer:n,formData:c,blob:i,text:l,ok:r.ok};s&&(s.textContent=JSON.stringify(u)),t.source?.postMessage(u)}catch(e){console.log(e),t.source?.postMessage({error:e})}})}}});
//# sourceMappingURL=postreq.min.js.map
